/*
|--------------------------------------------------
| Accordions
|--------------------------------------------------
*/

.accordions {
    padding: var(--spacer-1);

    h2 {
        color: $grey-dark;
    }

    .wrapper {
        display: flex;
        flex-direction: column;
        gap: var(--spacer-half);
    }

    /* Style the buttons that are used to open and close the accordion panel */
    button.accordion {
        font-family: $font-family-sans-serif;

        background-color: #eee;
        color: #444;
        cursor: pointer;
        padding: var(--spacer-third);
        width: 100%;
        text-align: left;
        border: none;
        outline: none;
        transition: 0.4s;

        border-radius: 10px;
        z-index: 2;
        position: relative;

        display: flex;
        align-items: center;

        /* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
        &.active,
        &:hover,
        &:focus,
        &:active {
            background-color: #ccc;
        }

        // + and - signs
        &::after {
            content: "\02795"; /* Unicode character for "plus" sign (+) */
            font-size: 13px;
            color: #777;
            // float: right;
            margin-left: 5px;
            position: absolute;
            right: var(--spacer-half);
        }

        &.active::after {
            content: "\2796"; /* Unicode character for "minus" sign (-) */
        }
    }

    .panel {
        // Accordion Content

        padding: 0 var(--spacer-1);
        background-color: $grey-dark;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.6s ease;
        position: relative;
        color: white;

        z-index: 1;

        --inset: 10px;
        transform: translateY(calc(var(--inset) * -2));
        border-radius: var(--inset);

        ///////
        //
        // Bit of a "hack" to get padding inside the panel
        // Using padding-top & padding-bottom breaks the min-height show / hide trick
        //
        ///////

        &:before,
        &:after {
            // Create "before" and "after" strips :)
            content: "";
            width: 50%;
            margin: 0 auto;
            height: var(--spacer-1);
            background: white;
            opacity: 0;
            display: block;
            top: 0;
            left: 0;
        }

        &::before {
            height: calc(var(--spacer-1) + (var(--inset) * 2));
        }
    }
}
