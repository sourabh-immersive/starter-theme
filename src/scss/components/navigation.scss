/*
|--------------------------------------------------
| Top Nav
|--------------------------------------------------
*/

header {
  --link-padding: var(--spacer-half);

  &.scrolled {
    --link-padding: var(--spacer-third);
  }

  + * {
    // Getting the height of the nav bar via JS
    // Adding Margin Top to the element directly after the <header> so it's that much from the top
    margin-top: var(--nav-bar-height);
    transition: margin 0.1s ease-in-out;
  }

  .logo-container {
    // Hidden until you scroll past the hero
    // opacity: 0;
    opacity: 1;
    pointer-events: all;

    // max-height: 50px;

    transition: padding ease-in-out, opacity ease-in-out;
    transition-duration: var(--trans-duration);

    filter: drop-shadow(0px 0px 10px var(--black-semi-light));

    width: auto;
    // border: 2px solid red;
    flex-grow: 0;

    a {
      padding: 0;
      display: block;

      .logo {
        max-height: 60px;
        display: block;
        width: auto;
        height: auto;
      }
    }
  }

  nav {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    margin-bottom: 100% !important;
    z-index: 200;

    background-color: peachpuff;
    // min-height: 100px; // This should be edited

    display: flex;
    gap: var(--spacer-1);
    justify-content: space-between;
    align-items: center;

    padding: var(--link-padding) var(--spacer-1);

    // .logo {
    //     background: white;
    //     border: 2px solid red;
    //     padding: var(--link-padding) var(--spacer-1);

    //     transition: padding 0.4s ease-in-out;
    // }

    // if class name contains menu
    [class*="menu"] {
      // Mobile first
      display: none;

      @media only screen and (min-width: 800px) {
        //bigger than 800px

        display: flex;
      }

      margin-left: auto; // So it's pushed to the right

      ul {
        display: flex; // So it flows horizontally
        gap: var(--spacer-half);

        li {
          a {
            border: 1px solid; // inherits text colour
            padding: var(--link-padding);

            transition: padding 0.4s ease-in-out;
          }
        }
      }
    }

    button.hamburger_toggle {
      // background: #eee;
      // padding: var(--spacer-1);

      // Mobile first
      display: flex;

      @media only screen and (min-width: 800px) {
        //bigger than 800px

        display: none;
      }
    }
  }
}

/*
|--------------------------------------------------
| Modal Navigation
|--------------------------------------------------
*/

/*
|--------------------------------------------------
| Hamburger Button Only
|--------------------------------------------------
*/

.home {
  .hamburger_toggle {
    // margin-top: calc(var(--spacer-1) - 1px);
  }
}

.hamburger_toggle {
  // SVG fill colour
  --burger-fill-color: var(--black, black);

  box-sizing: border-box;

  margin-left: 0;
  margin-top: calc(0);

  background-color: transparent;
  transition: background 0.6s ease-in-out; // Slow Fade Out

  --padding: 10px;
  padding: var(--padding);

  --size: 42px;
  width: var(--size);
  height: var(--size);

  border: 0 !important;
  position: relative;

  &:hover,
  &:focus,
  &:active {
    background-color: #ffffff10;
    transition: background 0.3s ease-in-out; // Fast Fade In
  }

  span {
    // display: none;
    // "Toggle Menu" text
    opacity: 0;
    width: 0;
    height: 0;
    position: absolute;
  }

  svg {
    // Default state (showing the "3 lines")

    --line-height: 2px;
    // border: 1px solid red;
    width: 100%;
    height: 100%;

    // transition: fill 0.2s ease-in-out;

    transition: transform 0.2s ease-in-out;

    > * {
      transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out,
        fill 0.3s ease-in-out;
      height: var(--line-height) !important;

      animation-duration: 0.4s;
      animation-timing-function: ease-in-out;
      animation-fill-mode: forwards;
    }

    g,
    path {
      transform-origin: center center !important;
    }

    #line1,
    #line2,
    #line3 {
      // transition: all 0.3s ease-in-out;
      animation-duration: 0.2s;
      animation-fill-mode: forwards;
    }

    #line1 {
      animation-name: topGoBack;
    }

    #line3 {
      animation-name: bottomGoBack;
    }
  }

  &.first-load {
    // So Animation doesn't run on page load
    // This class gets removed by JS
    #line1,
    #line2,
    #line3 {
      // transition: all 0.3s ease-in-out;
      animation-duration: 0.3s;
    }
  }

  #close {
    opacity: 0;
    transition: opacity 0.3s ease-in-out !important;
    // transition-delay: 0.4s;
  }

  &.toggled {
    // Toggled state (showing the "X")

    svg {
      // transition-delay: 0.4s;
      transform: rotate(135deg);
    }

    #close {
      transition-delay: 0;
      opacity: 1;
    }

    #line1 {
      animation-name: topGoToMiddle;
      // transform: rotate(45deg) !important;
      width: 0;
      height: 11px;
    }

    #line2 {
      opacity: 0;
    }

    #line3 {
      animation-name: bottomGoToMiddle;
    }
  }
}

@keyframes topGoToMiddle {
  0% {
    transform: translateY(calc(0%));
  }
  100% {
    transform: translateY(calc(10px));
  }
}

@keyframes topGoBack {
  0% {
    transform: translateY(calc(10px));
  }
  100% {
    transform: translateY(calc(0%));
  }
}

@keyframes bottomGoToMiddle {
  0% {
    transform: translateY(calc(0%));
  }
  100% {
    transform: translateY(calc(-10px));
  }
}
@keyframes bottomGoBack {
  0% {
    transform: translateY(calc(-10px));
  }
  100% {
    transform: translateY(calc(0%));
  }
}

@keyframes goBack1 {
  0% {
    transform: translateY(calc(30% + var(--line-height) / 2))
      translateX(calc(-30% + 0px)) rotate(45deg);
  }
  35% {
    transform: translateY(calc(30% + var(--line-height)));
  }
  100% {
    transform: translateY(calc(0%));
  }
}

@keyframes goToMiddle1 {
  0% {
    transform: translateY(calc(0%));
  }
  35% {
    transform: translateY(calc(30% + var(--line-height)));
  }
  100% {
    transform: translateY(calc(30% + var(--line-height) / 2))
      translateX(calc(-30% + 0px)) rotate(45deg);
  }
}

@keyframes goBack3 {
  0% {
    transform: translateY(calc(-30%)) translateX(calc(-30%)) rotate(-45deg);
  }
  35% {
    transform: translateY(calc(-30% - 4px));
  }
  100% {
    transform: translateY(calc(0%));
  }
}

@keyframes goToMiddle3 {
  0% {
    transform: translateY(calc(0%));
  }
  35% {
    transform: translateY(calc(-30% - 4px));
  }
  100% {
    transform: translateY(calc(-30%)) translateX(calc(-30%)) rotate(-45deg);
  }
}
